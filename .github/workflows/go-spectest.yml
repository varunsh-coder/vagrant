on:
  push:
    branches:
      - main
      - 'test-*'
    paths:
      - 'builtin/**'
      - 'cmd/**'
      - 'internal/**'
      - '.github/workflows**'
      - 'go.mod'
      - 'go.sum'
  # Allows manual trigger on arbitrary branches via GitHub UI/API
  workflow_dispatch:

permissions:
  contents: read

jobs:
  vagrant-spec-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['^1.16']
        ruby: ['3.1']
    name: Vagrant acceptance tests
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit

      - name: Code Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          submodules: 'recursive'
          # Also fetch all tags, since we need our version number in the build
          # to be based off a tag
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: ${{matrix.go}}
      - name: Setup Ruby
        uses: ruby/setup-ruby@8a45918450651f5e4784b6031db26f4b9f76b251 # v1.150.0
        with:
          ruby-version: ${{matrix.ruby}}
          bundler-cache: true
      - name: Build Vagrant
        run:  |
          git config --global url."https://${HASHIBOT_USERNAME}:${HASHIBOT_TOKEN}@github.com".insteadOf "https://github.com"
          make bin/linux
        env:
          HASHIBOT_USERNAME: ${{ secrets.HASHIBOT_USERNAME }}
          HASHIBOT_TOKEN: ${{ secrets.HASHIBOT_TOKEN }}
      - name: Add binstubs to path
        run: |
          echo "$PWD/binstubs" >> $GITHUB_PATH
        env:
          VAGRANT_SPEC_BOX: "hashicorp/bionic64"
      - name: Run vagrant-spec
        run: |
          VAGRANT_PATH="$GITHUB_WORKSPACE/vagrant" bundle exec vagrant-spec test --components=cli/version --config test/vagrant-spec/configs/vagrant-spec.config.virtualbox.rb
        env:
          VAGRANT_SPEC_BOX: "hashicorp/bionic64"
